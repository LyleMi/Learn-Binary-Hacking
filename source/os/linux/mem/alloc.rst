内存分配
========================================

分配与回收
----------------------------------------

内存分配
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 首次适应法
- 循环首次适应法
- 最佳适应算法
- 最差适应算法
- 多重分区

内存回收
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在运行时需要回收一些很少使用的内存页面来保证系统持续有内存使用。页面回收的方式有页回写、页交换和页丢弃三种方式。

页回写指一个很少使用的页的后备存储器是一个块设备（例如文件映射），则可以将内存直接同步到块设备，腾出的页面可以被重用。

页交换指页面没有后备存储器，则可以交换到特定swap分区，再次被访问时再交换回内存。

页丢弃指页面的后备存储器是一个文件，但文件内容在内存不能被修改（例如可执行文件），那么在当前不需要的情况下可直接丢弃。 

回收时间一般在内存紧缺时回收，或者周期性回收，或者由用户触发回收。

内存扩充
----------------------------------------

覆盖
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
在单用户系统中，为了能在较小的内存空间中运行大作业，可采用“覆盖”技术。覆盖技术就是将一个大程序按程序的逻辑结构划分成若干个程序（或数据）段，并将不会同时执行、从而就不必同时装入内存的程序段分在一组内，该组称为覆盖段。这个覆盖段可分配到同一个称为覆盖区的存储区域。

交换技术
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
覆盖技术用于一个作业的内部，交换技术用于不同的作业。早期在单一连续分配的存储区管理系统中，采用交换技术也可以实现多道程序设计。任一时刻，主存中只保留一个完整的用户作业。当该作业的时间片用完或因等待某一事件而不能继续运行时，系统就挑选下一个作业进入主存运行。

分页存储
----------------------------------------
页式存储管理的基本思想是把作业的虚地址空间划分成若干长度相等的页（page）,也称虚页，每一个作业的虚页都从0开始编号。主存也划分成若干与虚页长度相等的页架（frame），也称页框或实页，主存的页架也从0开始编号。程序装入时，每一个虚页装到主存中的一个页架中，这些页架可以是不连续的。

页淘汰
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- 最优淘汰算法（OPT）
- 先进先出淘汰算法（FIFO）
- 最近最少使用淘汰算法（LRU）
- 最近未使用淘汰算法（NUR）

内存分配函数
----------------------------------------

内核空间
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+-----------------------+-------------------+------------------------+
| 分配函数              | 释放函数          | 分配原理               |
+=======================+===================+========================+
| __get_free_pages      | __free_pages      | buddy                  |
+-----------------------+-------------------+------------------------+
| alloc_pages           | __free_pages      | buddy                  |
+-----------------------+-------------------+------------------------+
| kmem_cache_alloc      | kmem_cache_free   | slab                   |
+-----------------------+-------------------+------------------------+
| kmalloc               | kfree             | kmem_cache_alloc       |
+-----------------------+-------------------+------------------------+
| kzalloc/kcalloc       | kfree             | slab                   |
+-----------------------+-------------------+------------------------+
| vmalloc               | vfree             | slab                   |
+-----------------------+-------------------+------------------------+
| dma_alloc_coherent    | dma_free_coherent | __alloc_pages          |
+-----------------------+-------------------+------------------------+
| ioremap               | iounmap           | 物理地址到虚拟地址映射 |
+-----------------------+-------------------+------------------------+
| alloc_bootmem         | /                 | 物理地址到虚拟地址映射 |
+-----------------------+-------------------+------------------------+

用户空间
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- malloc / free
- calloc / free
- alloca / 自动
- mmap / munmap

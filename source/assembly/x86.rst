x86
========================================

寄存器
----------------------------------------

寄存器分类
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
x86架构的寄存器可以分为通用寄存器、内存管理寄存器、EFLAGS寄存器、EIP寄存器、浮点运算寄存器、控制寄存器等。

寄存器说明
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
- ESP
    - Extended Stack Pointer 栈指针寄存器
    - 指向最上面帧的栈顶
- EBP
    - Extended Base Pointer 基址指针寄存器
    - 指向最上面帧的栈底
- EIP
    - Extended Instruction Pointer 指令寄存器
    - 指向当前的指令地址
- EFLAGS
    - 保存当前执行状态的所有Flag
- CR0-CR7
    - 控制寄存器
    - 保存系统的控制位
- IDTR
    - Interrupt Descriptor Table Register
    - 中断寄存器，记录当前中断处理函数的地址
- IDTR
    - Global Descriptor Table Register
    - 记录段表

内存管理机制
----------------------------------------

分段机制
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
分段机制就是把虚拟地址空间中的虚拟内存组织成一些长度可变的称为段的内存单元。分段机制由逻辑地址、段选择寄存器、段描述符、段描述表四个部分构成。

分页机制
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
分页机制是用粒度更小的页来管理线性地址空间和物理地址空间，x86下一个典型的页大小是4KB。

页表是用于将线性地址转换为物理地址的主要数据结构。4KB大小的页面使用两级页表结构。

运行模式
----------------------------------------
x86的运行模式有：实模式(Real Mode)，保护模式(Protected Mode)，虚拟8086模式(Virtual 8086 Mode)、系统管理模式(System management mode ，SMM)四种，每种模式下可执行的指令和可用的功能可能不一样。

实模式是早期处理器的运行模式，通常处理器上电后会处于这个模式，在实地址模式中，可以访问的物理地址空间只有1MB。

保护模式是最常见的模式，这个模式下对内存及一些外围设备提供了硬件级别的保护设置，如分段机制、分页机制。大部分OS都运行在这个模式下。

参考链接
----------------------------------------
- `Intel 80386 Reference Programmer's Manual <https://nju-projectn.github.io/i386-manual/toc.htm>`_
